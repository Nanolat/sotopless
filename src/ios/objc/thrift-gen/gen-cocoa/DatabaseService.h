/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"


enum ErrorCode {
  ErrorCode_NL_SUCCESS = 0,
  ErrorCode_NL_ERROR_CODE_START = -1000,
  ErrorCode_NL_FAILURE = -1000,
  ErrorCode_NL_INVALID_ARGUMENT = -1001,
  ErrorCode_NL_INVALID_SESSION_HANDLE = -1002,
  ErrorCode_NL_INVALID_CURSOR_HANDLE = -1003,
  ErrorCode_NL_TRANSACTION_ALREADY_BEGAN = -1004,
  ErrorCode_NL_NO_TRANSACTION_BEGAN = -1005,
  ErrorCode_NL_DATABASE_ALREADY_EXISTS = -1006,
  ErrorCode_NL_DATABASE_DOES_NOT_EXIST = -1007,
  ErrorCode_NL_DATABASE_ALREADY_OPEN = -1008,
  ErrorCode_NL_DATABASE_NOT_OPEN = -1009,
  ErrorCode_NL_TABLE_ALREADY_EXISTS = -1010,
  ErrorCode_NL_TABLE_DOES_NOT_EXIST = -1011,
  ErrorCode_NL_TABLE_ALREADY_OPEN = -1012,
  ErrorCode_NL_TABLE_NOT_OPEN = -1013,
  ErrorCode_NL_CURSOR_HAS_NO_MORE_KEYS = -1014,
  ErrorCode_NL_ERROR_CODE_END = -1014
};

enum CursorDirection {
  CursorDirection_CD_FORWARD = 1,
  CursorDirection_CD_BACKWARD = 2
};

typedef int64_t KeyOrder;

typedef int64_t CursorHandle;

@interface ReplyStatus : NSObject <TBase, NSCoding> {
  int __error_code;
  NSString * __error_message_format;
  NSMutableArray * __error_message_args;

  BOOL __error_code_isset;
  BOOL __error_message_format_isset;
  BOOL __error_message_args_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=error_code, setter=setError_code:) int error_code;
@property (nonatomic, retain, getter=error_message_format, setter=setError_message_format:) NSString * error_message_format;
@property (nonatomic, retain, getter=error_message_args, setter=setError_message_args:) NSMutableArray * error_message_args;
#endif

- (id) init;
- (id) initWithError_code: (int) error_code error_message_format: (NSString *) error_message_format error_message_args: (NSMutableArray *) error_message_args;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) error_code;
- (void) setError_code: (int) error_code;
#endif
- (BOOL) error_codeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) error_message_format;
- (void) setError_message_format: (NSString *) error_message_format;
#endif
- (BOOL) error_message_formatIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) error_message_args;
- (void) setError_message_args: (NSMutableArray *) error_message_args;
#endif
- (BOOL) error_message_argsIsSet;

@end

@interface DefaultReply : NSObject <TBase, NSCoding> {
  ReplyStatus * __status;

  BOOL __status_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=status, setter=setStatus:) ReplyStatus * status;
#endif

- (id) init;
- (id) initWithStatus: (ReplyStatus *) status;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (ReplyStatus *) status;
- (void) setStatus: (ReplyStatus *) status;
#endif
- (BOOL) statusIsSet;

@end

@interface TableGetReply : NSObject <TBase, NSCoding> {
  ReplyStatus * __status;
  NSData * __key;
  NSData * __value;
  KeyOrder __key_order;

  BOOL __status_isset;
  BOOL __key_isset;
  BOOL __value_isset;
  BOOL __key_order_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=status, setter=setStatus:) ReplyStatus * status;
@property (nonatomic, retain, getter=key, setter=setKey:) NSData * key;
@property (nonatomic, retain, getter=value, setter=setValue:) NSData * value;
@property (nonatomic, getter=key_order, setter=setKey_order:) KeyOrder key_order;
#endif

- (id) init;
- (id) initWithStatus: (ReplyStatus *) status key: (NSData *) key value: (NSData *) value key_order: (KeyOrder) key_order;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (ReplyStatus *) status;
- (void) setStatus: (ReplyStatus *) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (NSData *) key;
- (void) setKey: (NSData *) key;
#endif
- (BOOL) keyIsSet;

#if !__has_feature(objc_arc)
- (NSData *) value;
- (void) setValue: (NSData *) value;
#endif
- (BOOL) valueIsSet;

#if !__has_feature(objc_arc)
- (KeyOrder) key_order;
- (void) setKey_order: (KeyOrder) key_order;
#endif
- (BOOL) key_orderIsSet;

@end

@interface TableStatReply : NSObject <TBase, NSCoding> {
  ReplyStatus * __status;
  KeyOrder __key_count;

  BOOL __status_isset;
  BOOL __key_count_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=status, setter=setStatus:) ReplyStatus * status;
@property (nonatomic, getter=key_count, setter=setKey_count:) KeyOrder key_count;
#endif

- (id) init;
- (id) initWithStatus: (ReplyStatus *) status key_count: (KeyOrder) key_count;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (ReplyStatus *) status;
- (void) setStatus: (ReplyStatus *) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (KeyOrder) key_count;
- (void) setKey_count: (KeyOrder) key_count;
#endif
- (BOOL) key_countIsSet;

@end

@interface CursorOpenReply : NSObject <TBase, NSCoding> {
  ReplyStatus * __status;
  CursorHandle __cursor_handle;

  BOOL __status_isset;
  BOOL __cursor_handle_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=status, setter=setStatus:) ReplyStatus * status;
@property (nonatomic, getter=cursor_handle, setter=setCursor_handle:) CursorHandle cursor_handle;
#endif

- (id) init;
- (id) initWithStatus: (ReplyStatus *) status cursor_handle: (CursorHandle) cursor_handle;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (ReplyStatus *) status;
- (void) setStatus: (ReplyStatus *) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (CursorHandle) cursor_handle;
- (void) setCursor_handle: (CursorHandle) cursor_handle;
#endif
- (BOOL) cursor_handleIsSet;

@end

@interface CursorFetchReply : NSObject <TBase, NSCoding> {
  ReplyStatus * __status;
  NSData * __key;
  KeyOrder __key_order;
  NSData * __value;

  BOOL __status_isset;
  BOOL __key_isset;
  BOOL __key_order_isset;
  BOOL __value_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=status, setter=setStatus:) ReplyStatus * status;
@property (nonatomic, retain, getter=key, setter=setKey:) NSData * key;
@property (nonatomic, getter=key_order, setter=setKey_order:) KeyOrder key_order;
@property (nonatomic, retain, getter=value, setter=setValue:) NSData * value;
#endif

- (id) init;
- (id) initWithStatus: (ReplyStatus *) status key: (NSData *) key key_order: (KeyOrder) key_order value: (NSData *) value;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (ReplyStatus *) status;
- (void) setStatus: (ReplyStatus *) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (NSData *) key;
- (void) setKey: (NSData *) key;
#endif
- (BOOL) keyIsSet;

#if !__has_feature(objc_arc)
- (KeyOrder) key_order;
- (void) setKey_order: (KeyOrder) key_order;
#endif
- (BOOL) key_orderIsSet;

#if !__has_feature(objc_arc)
- (NSData *) value;
- (void) setValue: (NSData *) value;
#endif
- (BOOL) valueIsSet;

@end

@interface Session : NSObject <TBase, NSCoding> {
  int32_t __session_handle;

  BOOL __session_handle_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=session_handle, setter=setSession_handle:) int32_t session_handle;
#endif

- (id) init;
- (id) initWithSession_handle: (int32_t) session_handle;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) session_handle;
- (void) setSession_handle: (int32_t) session_handle;
#endif
- (BOOL) session_handleIsSet;

@end

@interface ConnectReply : NSObject <TBase, NSCoding> {
  ReplyStatus * __status;
  int32_t __session_handle;

  BOOL __status_isset;
  BOOL __session_handle_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=status, setter=setStatus:) ReplyStatus * status;
@property (nonatomic, getter=session_handle, setter=setSession_handle:) int32_t session_handle;
#endif

- (id) init;
- (id) initWithStatus: (ReplyStatus *) status session_handle: (int32_t) session_handle;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (ReplyStatus *) status;
- (void) setStatus: (ReplyStatus *) status;
#endif
- (BOOL) statusIsSet;

#if !__has_feature(objc_arc)
- (int32_t) session_handle;
- (void) setSession_handle: (int32_t) session_handle;
#endif
- (BOOL) session_handleIsSet;

@end

@protocol DatabaseService <NSObject>
- (ConnectReply *) connect;  // throws TException
- (DefaultReply *) disconnect: (Session *) session;  // throws TException
- (DefaultReply *) database_create: (Session *) session db_name: (NSString *) db_name;  // throws TException
- (DefaultReply *) database_drop: (Session *) session db_name: (NSString *) db_name;  // throws TException
- (DefaultReply *) database_use: (Session *) session db_name: (NSString *) db_name;  // throws TException
- (DefaultReply *) table_create: (Session *) session table_name: (NSString *) table_name;  // throws TException
- (DefaultReply *) table_drop: (Session *) session table_name: (NSString *) table_name;  // throws TException
- (TableStatReply *) table_stat: (Session *) session table_name: (NSString *) table_name;  // throws TException
- (DefaultReply *) table_put: (Session *) session table_name: (NSString *) table_name key: (NSData *) key value: (NSData *) value;  // throws TException
- (TableGetReply *) table_get_by_key: (Session *) session table_name: (NSString *) table_name key: (NSData *) key;  // throws TException
- (TableGetReply *) table_get_by_order: (Session *) session table_name: (NSString *) table_name keyOrder: (KeyOrder) keyOrder;  // throws TException
- (DefaultReply *) table_del: (Session *) session table_name: (NSString *) table_name key: (NSData *) key;  // throws TException
- (DefaultReply *) transaction_begin: (Session *) session;  // throws TException
- (DefaultReply *) transaction_abort: (Session *) session;  // throws TException
- (DefaultReply *) transaction_commit: (Session *) session;  // throws TException
- (CursorOpenReply *) cursor_open_by_key: (Session *) session table_name: (NSString *) table_name dir: (int) dir key: (NSData *) key;  // throws TException
- (CursorOpenReply *) cursor_open_by_order: (Session *) session table_name: (NSString *) table_name dir: (int) dir keyOrder: (KeyOrder) keyOrder;  // throws TException
- (CursorFetchReply *) cursor_fetch: (Session *) session cursor_handle: (CursorHandle) cursor_handle;  // throws TException
- (DefaultReply *) cursor_close: (Session *) session cursor_handle: (CursorHandle) cursor_handle;  // throws TException
@end

@interface DatabaseServiceClient : NSObject <DatabaseService> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface DatabaseServiceProcessor : NSObject <TProcessor> {
  id <DatabaseService> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithDatabaseService: (id <DatabaseService>) service;
- (id<DatabaseService>) service;
@end

@interface DatabaseServiceConstants : NSObject {
}
@end
